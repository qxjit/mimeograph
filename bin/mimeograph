#!/usr/bin/env ruby

require 'fileutils'

module Mimeograph
  class Command < Struct.new(:args)
    attr_reader :exit_code

    ALWAYS_ON_OPTIONS = %w(
      -r
     --perms
     --times
     --links
     --hard-links
     --specials
     --devices
     --owner
     --group
    )

    def output
      @output ||= ""
    end

    def run
      source, dest, exclusions_file = args

      exclusion_options = if exclusions_file
                            ["--exclude-from=" + exclusions_file]
                          else
                            []
                          end

      options = ALWAYS_ON_OPTIONS + exclusion_options + command_options + [source + "/", dest]

      puts "Running rsync #{options.join(' ')}"

      IO.popen ["rsync", *options] do |io|
        io.each_line do |line|
          output << line
          output << "\n"
          puts line
          handle_line line
        end
      end

      @exit_code = $?.exitstatus
    end

    def handle_line(line)

    end
  end

  class Push < Command
    def command_options
      []
    end
  end

  class Diff < Command
    def command_options
      %w(--dry-run --verbose --out-format file:\ %n)
    end

    def run
      File.open 'mimeograph.diff', 'w' do |diff_file|
        @diff_file = diff_file
        super
      end
    end

    def handle_line(line)
      if line =~ /^file: /
        @diff_file.puts line[6..-1]
      end
    end
  end
end

command_name, *args = ARGV

command_class = case command_name
                when "push" then Mimeograph::Push
                when "diff" then Mimeograph::Diff
                else
                  puts "Unknown command: #{command_name}"
                  exit 1
                end

exit command_class.new(args).run

